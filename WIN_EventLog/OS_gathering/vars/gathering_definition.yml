---
command:
  - Get-EventLog -List | Select-Object 'Log', 'MaximumKilobytes', 'MinimumRetentionDays', 'OverflowAction' | ConvertTo-Json
  - $data = New-Object PSObject; foreach($a in (Get-EventLog -List -AsString | format-list Log | Out-String -Stream | Where-Object{$_ -ne ""})){ $data | Add-Member -MemberType NoteProperty -name $a -Value (([xml](wevtutil gl "$a" /f:xml)).Channel.logging |  Select-Object 'logFileName', 'retention', 'autoBackup') }; Write-output $data | ConvertTo-Json
  - Get-WinEvent -ListLog * | Where-Object{$_.IsClassicLog -eq $FALSE} | Select-Object 'LogName', 'MaximumSizeInBytes', 'IsEnabled' | ConvertTo-Json
  - $data = New-Object PSObject; foreach($a in (Get-WinEvent -ListLog * | Where-Object{$_.IsClassicLog -eq $FALSE} | format-list LogName | Out-String -Stream | Where-Object{$_ -ne ""} | foreach{$_.Remove(0,10)})){ $data | Add-Member -MemberType NoteProperty -name $a -Value (([xml](wevtutil gl "$a" /f:xml)).Channel.logging |  Select-Object 'logFileName', 'retention', 'autoBackup') }; Write-output $data | ConvertTo-Json
  - $data = foreach($a in (Get-EventLog -List -AsString | format-list Log | Out-String -Stream | Where-Object{$_ -ne ""})){ Get-WinEvent -ListLog $a | Select-Object 'LogName', 'IsEnabled' };$data | ConvertTo-Json